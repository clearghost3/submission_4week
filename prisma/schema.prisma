// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Resumestatus {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}

model Users {
  userid      Int             @id @default(autoincrement()) @map("userid")
  email       String         @unique @map("email")
  
  password    String          @map("password")
  createdAt   DateTime        @default(now()) @map("createdAt")
  updatedAt   DateTime        @updatedAt @map("updatedAt")

  Userinfos  Userinfos?
  Resume     Resume?

  @@map("Users")
}

model Userinfos {
  userinfosid   Int           @id @default(autoincrement()) @map("userinfosid")

  Userid        Int           @unique @map("Userid")

  name          String        @map("name")
  age           Int           @map("age")
  gender        String?       @map("gender")
  profilimage   String?       @map("profilimage")
  createdAt     DateTime      @default(now()) @map("createdAt")
  updatedAt     DateTime      @updatedAt @map("updatedAt")

  user          Users   @relation(fields:[Userid],references:[userid],onDelete:Cascade)

  @@map("Userinfos")

}

model Resume {
  resumeid          Int           @id @default(autoincrement()) @map("resumeid")

  Userid            Int           @unique @map("Userid")

  content           String        @map("content")
  status            Resumestatus  @map("status")
  decision_reason   String        @map("decision_reason")
  manager           String        @map("manager")
  createdAt         DateTime      @default(now()) @map("createdAt")
  updatedAt         DateTime      @updatedAt @map("updatedAt")

  user          Users   @relation(fields:[Userid],references:[userid],onDelete:Cascade)
  
  @@map("Resume")
}